name: image
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

defaults:
  run:
    shell: bash

concurrency:
  group: "image"
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  REGISTRY_IMAGE: ghcr.io/borrowsanitizer/bsan
  COMPRESSION: .tar.xz
  
jobs:
    # Builds a series of Docker images; one for each supported architecture
    # Each image has a corresponding "digest" that's saved as an artifact.
    # Each digest is combined into a single, multi-architecture image in the final stage.
    build:
      strategy:
        fail-fast: false
        matrix:
          config:
            - platform: linux/amd64
              target: x86_64-unknown-linux-gnu
              os: ubuntu-latest
            - platform: linux/arm64
              target: aarch64-unknown-linux-gnu
              os: ubuntu-24.04-arm
      runs-on: ${{ matrix.config.os }}
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Prepare Config
          id: variables
          run: |
            platform=${${{ matrix.config.platform }}//\//-} 
            tag=$(jq -r '.build.args.TAG' .devcontainer/devcontainer.json)
            echo "platform=$platform" >> "$GITHUB_OUTPUT"
            echo "tag=$tag" >> "$GITHUB_OUTPUT"

        - name: Docker meta
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: ${{ env.REGISTRY_IMAGE }}

        - name: Login
          uses: docker/login-action@v3
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Build and push by digest
          id: build
          uses: docker/build-push-action@v6
          with:
            context: .
            file: .devcontainer/Dockerfile
            platforms: ${{ matrix.config.platform }}
            labels: ${{ steps.meta.outputs.labels }}
            tags: ${{ env.REGISTRY_IMAGE }}
            provenance: false
            target: image-release
            sbom: false
            pull: false
            outputs: type=image,push-by-digest=true,name-canonical=true,push=true
            build-args: |
              TAG=${{ steps.variables.outputs.tag }}
              
        - name: Export digest
          run: |
            mkdir -p ${{ runner.temp }}/digests
            digest="${{ steps.build.outputs.digest }}"
            touch "${{ runner.temp }}/digests/${digest#sha256:}"

        - name: Upload digest
          uses: actions/upload-artifact@v4
          with:
            name: digests-${{ steps.variables.outputs.platform }}
            path: ${{ runner.temp }}/digests/*
            if-no-files-found: error
            retention-days: 1

    merge:
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Download digests
          uses: actions/download-artifact@v4
          with:
            path: ${{ runner.temp }}/digests
            pattern: digests-*
            merge-multiple: true

        - name: Login
          uses: docker/login-action@v3
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Docker meta
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: ${{ env.REGISTRY_IMAGE }}
            tags: |
              type=raw,value=latest,enable={{is_default_branch}}
              type=sha

        - name: Create manifest list and push
          working-directory: ${{ runner.temp }}/digests
          run: |
            docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
              $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
